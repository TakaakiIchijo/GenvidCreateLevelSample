job "web" {
  datacenters = [
    // {{range $i, $dc := datacenters}}
    "{{$dc}}",
    // {{end}}
  ]

  task "web" {

    driver = "docker"

    config = {
      image        = "{{key `genvid/images/web/tag`}}"
      load         = "{{key `genvid/images/web/image` | replaceAll `.zip` `.docker`}}"
      force_pull   = {{key `genvid/images/web/dirty` | parseBool}}
      network_mode = "host"

      // {{ if keyOrDefault "genvid/code/logging/fluentd/enabled" "false" | parseBool }}
      logging {
        type = "fluentd"
        config {
          fluentd-address = "${NOMAD_IP_web}:24224"
          tag             = "${NOMAD_TASK_NAME}"
        }
      }
      // {{ end }}
    }

    constraint {
      attribute = "${node.class}"
      value = "public"
    }

    artifact {
      source = "{{key `genvid/images/web/url`}}"
    }

    env {
      GENVID_LIVESERVICE = "{{key `/genvid/encode/stream/service`}}"
      GENVID_LIVECHANNEL = "{{key `/genvid/encode/stream/channel`}}"
      // {{with secret `secret/disco` }}
      GENVID_DISCO_SECRET = "{{ .Data.GENVID_DISCO_SECRET }}"
      // {{end}}
      // {{with secret `secret/studio` }}
      GENVID_STUDIO_SECRET = "{{ .Data.GENVID_STUDIO_SECRET }}"
      // {{end}}
      // {{with secret `secret/webgateway` }}
      GENVID_WEBGATEWAY_SECRET = "{{ .Data.GENVID_WEBGATEWAY_SECRET }}"
      // {{end}}
      // {{if keyExists `/twitch_extension/enabled`}}
	    // {{ if key `/twitch_extension/enabled` | parseBool }}
	    // {{with secret `secret/twitch` }}
	    CLIENT_SECRET = "{{ .Data.TWITCH_EXT_CLIENT_SECRET }}"
      ENDPOINT = "{{key `/cloud/endpoint/leaf`}}"
      SSL = true
      // {{ end }}{{ end }}{{end}}
	    // {{if keyExists `/embed_ssl/enabled`}}
	    // {{ if key `/embed_ssl/enabled` | parseBool }}
      ENDPOINT = "{{key `/cloud/endpoint/leaf`}}"
      SSL = true
      // {{ end }}{{ end }}
      PORT = "${NOMAD_PORT_web}"
    }

    resources {
      network {
        mbits = 5
        port "web" {
          static = 30000
        }
      }
      memory = 100
    }

    service {
      name = "web"
      tags = ["engage", "web"]
      port = "web"

      check {
        type     = "http"
        path     = "/health"
        interval = "5s"
        timeout  = "2s"
      }
    }
  }
}
